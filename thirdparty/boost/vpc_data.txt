    
    $Folder "pub\math\special_functions"
    {
        $File "pub\math\special_functions\acosh.hpp"
        $File "pub\math\special_functions\asinh.hpp"
        $File "pub\math\special_functions\atanh.hpp"
        $File "pub\math\special_functions\sinc.hpp"
        $File "pub\math\special_functions\sinhc.hpp"
    }
    
    $Folder "pub\test\detail"
    {
        $File "pub\test\detail\class_properties.hpp"
        $File "pub\test\detail\nullstream.hpp"
        $File "pub\test\detail\unit_test_config.hpp"
        $File "pub\test\detail\unit_test_monitor.hpp"
        $File "pub\test\detail\unit_test_parameters.hpp"
        $File "pub\test\detail\wrap_stringstream.hpp"
    }
    
    $Folder "pub"
    {
        $File "pub\any.hpp"
        $File "pub\array.hpp"
        $File "pub\assert.hpp"
        $File "pub\bind.hpp"
        $File "pub\call_traits.hpp"
        $File "pub\cast.hpp"
        $File "pub\checked_delete.hpp"
        $File "pub\compose.hpp"
        $File "pub\compressed_pair.hpp"
        $File "pub\concept_archetype.hpp"
        $File "pub\concept_check.hpp"
        $File "pub\config.hpp"
        $File "pub\counting_iterator.hpp"
        $File "pub\crc.hpp"
        $File "pub\cregex.hpp"
        $File "pub\cstdint.hpp"
        $File "pub\cstdlib.hpp"
        $File "pub\current_function.hpp"
        $File "pub\dynamic_bitset_fwd.hpp"
        $File "pub\dynamic_bitset.hpp"
        $File "pub\enable_shared_from_this.hpp"
        $File "pub\format.hpp"
        $File "pub\function_output_iterator.hpp"
        $File "pub\function.hpp"
        $File "pub\functional.hpp"
        $File "pub\generator_iterator.hpp"
        $File "pub\get_pointer.hpp"
        $File "pub\half_open_range.hpp"
        $File "pub\integer_fwd.hpp"
        $File "pub\integer_traits.hpp"
        $File "pub\integer.hpp"
        $File "pub\intrusive_ptr.hpp"
        $File "pub\io_fwd.hpp"
        $File "pub\iterator_adaptors.hpp"
        $File "pub\iterator.hpp"
        $File "pub\last_value.hpp"
        $File "pub\lexical_cast.hpp"
        $File "pub\limits.hpp"
        $File "pub\math_fwd.hpp"
        $File "pub\mem_fn.hpp"
        $File "pub\min_rand.hpp"
        $File "pub\multi_array.hpp"
        $File "pub\next_prior.hpp"
        $File "pub\noncopyable.hpp"
        $File "pub\nondet_random.hpp"
        $File "pub\operators.hpp"
        $File "pub\optional.hpp"
        $File "pub\permutation_iterator.hpp"
        $File "pub\preprocessor.hpp"
        $File "pub\progress.hpp"
        $File "pub\property_map_iterator.hpp"
        $File "pub\property_map.hpp"
        $File "pub\python.hpp"
        $File "pub\random.hpp"
        $File "pub\rational.hpp"
        $File "pub\ref.hpp"
        $File "pub\regex_fwd.hpp"
        $File "pub\regex.h"
        $File "pub\regex.hpp"
        $File "pub\scoped_array.hpp"
        $File "pub\scoped_ptr.hpp"
        $File "pub\shared_array.hpp"
        $File "pub\shared_container_iterator.hpp"
        $File "pub\shared_ptr.hpp"
        $File "pub\signal.hpp"
        $File "pub\smart_ptr.hpp"
        $File "pub\spirit.hpp"
        $File "pub\static_assert.hpp"
        $File "pub\thread.hpp"
        $File "pub\throw_exception.hpp"
        $File "pub\timer.hpp"
        $File "pub\token_functions.hpp"
        $File "pub\token_iterator.hpp"
        $File "pub\tokenizer.hpp"
        $File "pub\type_traits.hpp"
        $File "pub\type.hpp"
        $File "pub\utility_fwd.hpp"
        $File "pub\utility.hpp"
        $File "pub\version.hpp"
        $File "pub\visit_each.hpp"
        $File "pub\weak_ptr.hpp"
    }
    
    $Folder "pub\spirit\core\meta\impl"
    {
        $File "pub\spirit\core\meta\impl\parser_type.hpp"
    }
    
    $Folder "pub\mpl\list\aux_"
    {
        $File "pub\mpl\list\aux_\begin_end.hpp"
        $File "pub\mpl\list\aux_\clear.hpp"
        $File "pub\mpl\list\aux_\empty.hpp"
        $File "pub\mpl\list\aux_\front.hpp"
        $File "pub\mpl\list\aux_\include_preprocessed.hpp"
        $File "pub\mpl\list\aux_\iterator.hpp"
        $File "pub\mpl\list\aux_\node.hpp"
        $File "pub\mpl\list\aux_\numbered_c.hpp"
        $File "pub\mpl\list\aux_\numbered.hpp"
        $File "pub\mpl\list\aux_\O1_size.hpp"
        $File "pub\mpl\list\aux_\pop_front.hpp"
        $File "pub\mpl\list\aux_\push_front.hpp"
        $File "pub\mpl\list\aux_\size.hpp"
        $File "pub\mpl\list\aux_\tag.hpp"
    }
    
    $Folder "pub\numeric\interval"
    {
        $File "pub\numeric\interval\arith.hpp"
        $File "pub\numeric\interval\arith2.hpp"
        $File "pub\numeric\interval\checking.hpp"
        $File "pub\numeric\interval\compare.hpp"
        $File "pub\numeric\interval\constants.hpp"
        $File "pub\numeric\interval\hw_rounding.hpp"
        $File "pub\numeric\interval\interval.hpp"
        $File "pub\numeric\interval\io.hpp"
        $File "pub\numeric\interval\limits.hpp"
        $File "pub\numeric\interval\policies.hpp"
        $File "pub\numeric\interval\rounded_arith.hpp"
        $File "pub\numeric\interval\rounded_transc.hpp"
        $File "pub\numeric\interval\rounding.hpp"
        $File "pub\numeric\interval\transc.hpp"
        $File "pub\numeric\interval\utility.hpp"
    }
    
    $Folder "pub\python\object"
    {
        $File "pub\python\object\add_to_namespace.hpp"
        $File "pub\python\object\class_converters.hpp"
        $File "pub\python\object\class_detail.hpp"
        $File "pub\python\object\class_wrapper.hpp"
        $File "pub\python\object\class.hpp"
        $File "pub\python\object\enum_base.hpp"
        $File "pub\python\object\find_instance.hpp"
        $File "pub\python\object\forward.hpp"
        $File "pub\python\object\function_handle.hpp"
        $File "pub\python\object\function_object.hpp"
        $File "pub\python\object\function.hpp"
        $File "pub\python\object\inheritance.hpp"
        $File "pub\python\object\instance.hpp"
        $File "pub\python\object\iterator_core.hpp"
        $File "pub\python\object\iterator.hpp"
        $File "pub\python\object\life_support.hpp"
        $File "pub\python\object\make_holder.hpp"
        $File "pub\python\object\make_instance.hpp"
        $File "pub\python\object\make_ptr_instance.hpp"
        $File "pub\python\object\pickle_support.hpp"
        $File "pub\python\object\pointer_holder.hpp"
        $File "pub\python\object\py_function.hpp"
        $File "pub\python\object\select_holder.hpp"
        $File "pub\python\object\value_holder_fwd.hpp"
        $File "pub\python\object\value_holder.hpp"
    }
    
    $Folder "pub\numeric\ublas"
    {
        $File "pub\numeric\ublas\banded.hpp"
        $File "pub\numeric\ublas\blas.hpp"
        $File "pub\numeric\ublas\concepts.hpp"
        $File "pub\numeric\ublas\config.hpp"
        $File "pub\numeric\ublas\duff.hpp"
        $File "pub\numeric\ublas\exception.hpp"
        $File "pub\numeric\ublas\functional.hpp"
        $File "pub\numeric\ublas\hermitian.hpp"
        $File "pub\numeric\ublas\io.hpp"
        $File "pub\numeric\ublas\iterator.hpp"
        $File "pub\numeric\ublas\matrix_assign.hpp"
        $File "pub\numeric\ublas\matrix_expression.hpp"
        $File "pub\numeric\ublas\matrix_proxy.hpp"
        $File "pub\numeric\ublas\matrix_sparse.hpp"
        $File "pub\numeric\ublas\matrix.hpp"
        $File "pub\numeric\ublas\operation_blocked.hpp"
        $File "pub\numeric\ublas\operation_sparse.hpp"
        $File "pub\numeric\ublas\operation.hpp"
        $File "pub\numeric\ublas\storage_sparse.hpp"
        $File "pub\numeric\ublas\storage.hpp"
        $File "pub\numeric\ublas\symmetric.hpp"
        $File "pub\numeric\ublas\traits.hpp"
        $File "pub\numeric\ublas\triangular.hpp"
        $File "pub\numeric\ublas\vector_assign.hpp"
        $File "pub\numeric\ublas\vector_expression.hpp"
        $File "pub\numeric\ublas\vector_proxy.hpp"
        $File "pub\numeric\ublas\vector_sparse.hpp"
        $File "pub\numeric\ublas\vector.hpp"
    }
    
    $Folder "pub\preprocessor\seq\detail"
    {
        $File "pub\preprocessor\seq\detail\split.hpp"
    }
    
    $Folder "pub\spirit\tree"
    {
        $File "pub\spirit\tree\ast.hpp"
        $File "pub\spirit\tree\common.hpp"
        $File "pub\spirit\tree\parse_tree_utils.hpp"
        $File "pub\spirit\tree\parse_tree.hpp"
        $File "pub\spirit\tree\tree_iterator.hpp"
        $File "pub\spirit\tree\tree_to_xml.hpp"
    }
    
    $Folder "pub\spirit\utility"
    {
        $File "pub\spirit\utility\chset_operators.hpp"
        $File "pub\spirit\utility\chset.hpp"
        $File "pub\spirit\utility\confix.hpp"
        $File "pub\spirit\utility\escape_char.hpp"
        $File "pub\spirit\utility\flush_multi_pass.hpp"
        $File "pub\spirit\utility\functor_parser.hpp"
        $File "pub\spirit\utility\lists.hpp"
        $File "pub\spirit\utility\loops.hpp"
        $File "pub\spirit\utility\refactoring.hpp"
        $File "pub\spirit\utility\regex.hpp"
        $File "pub\spirit\utility\scoped_lock.hpp"
    }
    
    $Folder "pub\preprocessor\seq"
    {
        $File "pub\preprocessor\seq\cat.hpp"
        $File "pub\preprocessor\seq\elem.hpp"
        $File "pub\preprocessor\seq\enum.hpp"
        $File "pub\preprocessor\seq\filter.hpp"
        $File "pub\preprocessor\seq\first_n.hpp"
        $File "pub\preprocessor\seq\fold_left.hpp"
        $File "pub\preprocessor\seq\fold_right.hpp"
        $File "pub\preprocessor\seq\for_each_i.hpp"
        $File "pub\preprocessor\seq\for_each_product.hpp"
        $File "pub\preprocessor\seq\for_each.hpp"
        $File "pub\preprocessor\seq\insert.hpp"
        $File "pub\preprocessor\seq\pop_back.hpp"
        $File "pub\preprocessor\seq\pop_front.hpp"
        $File "pub\preprocessor\seq\push_back.hpp"
        $File "pub\preprocessor\seq\push_front.hpp"
        $File "pub\preprocessor\seq\remove.hpp"
        $File "pub\preprocessor\seq\replace.hpp"
        $File "pub\preprocessor\seq\rest_n.hpp"
        $File "pub\preprocessor\seq\reverse.hpp"
        $File "pub\preprocessor\seq\seq.hpp"
        $File "pub\preprocessor\seq\size.hpp"
        $File "pub\preprocessor\seq\subseq.hpp"
        $File "pub\preprocessor\seq\to_array.hpp"
        $File "pub\preprocessor\seq\to_tuple.hpp"
        $File "pub\preprocessor\seq\transform.hpp"
    }
    
    $Folder "pub\spirit\dynamic"
    {
        $File "pub\spirit\dynamic\for.hpp"
        $File "pub\spirit\dynamic\if.hpp"
        $File "pub\spirit\dynamic\while.hpp"
    }
    
    $Folder "pub\numeric\interval\detail"
    {
        $File "pub\numeric\interval\detail\bcc_rounding_control.hpp"
        $File "pub\numeric\interval\detail\bugs.hpp"
        $File "pub\numeric\interval\detail\c99_rounding_control.hpp"
        $File "pub\numeric\interval\detail\c99sub_rounding_control.hpp"
        $File "pub\numeric\interval\detail\division.hpp"
        $File "pub\numeric\interval\detail\interval_prototype.hpp"
        $File "pub\numeric\interval\detail\msvc_rounding_control.hpp"
        $File "pub\numeric\interval\detail\ppc_rounding_control.hpp"
        $File "pub\numeric\interval\detail\sparc_rounding_control.hpp"
        $File "pub\numeric\interval\detail\test_input.hpp"
        $File "pub\numeric\interval\detail\x86_rounding_control.hpp"
        $File "pub\numeric\interval\detail\x86gcc_rounding_control.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\plain"
    {
        $File "pub\mpl\aux_\preprocessed\plain\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\and.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\list.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\or.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\plain\vector.hpp"
    }
    
    $Folder "pub\spirit\phoenix"
    {
        $File "pub\spirit\phoenix\actor.hpp"
        $File "pub\spirit\phoenix\binders.hpp"
        $File "pub\spirit\phoenix\casts.hpp"
        $File "pub\spirit\phoenix\closures.hpp"
        $File "pub\spirit\phoenix\composite.hpp"
        $File "pub\spirit\phoenix\functions.hpp"
        $File "pub\spirit\phoenix\operators.hpp"
        $File "pub\spirit\phoenix\primitives.hpp"
        $File "pub\spirit\phoenix\special_ops.hpp"
        $File "pub\spirit\phoenix\statements.hpp"
        $File "pub\spirit\phoenix\tuple_helpers.hpp"
        $File "pub\spirit\phoenix\tuples.hpp"
    }
    
    $Folder "pub\mpl\vector\aux_"
    {
        $File "pub\mpl\vector\aux_\at.hpp"
        $File "pub\mpl\vector\aux_\back.hpp"
        $File "pub\mpl\vector\aux_\begin_end.hpp"
        $File "pub\mpl\vector\aux_\clear.hpp"
        $File "pub\mpl\vector\aux_\empty.hpp"
        $File "pub\mpl\vector\aux_\front.hpp"
        $File "pub\mpl\vector\aux_\include_preprocessed.hpp"
        $File "pub\mpl\vector\aux_\item.hpp"
        $File "pub\mpl\vector\aux_\iterator.hpp"
        $File "pub\mpl\vector\aux_\node.hpp"
        $File "pub\mpl\vector\aux_\numbered_c.hpp"
        $File "pub\mpl\vector\aux_\numbered.hpp"
        $File "pub\mpl\vector\aux_\O1_size.hpp"
        $File "pub\mpl\vector\aux_\pop_back.hpp"
        $File "pub\mpl\vector\aux_\pop_front.hpp"
        $File "pub\mpl\vector\aux_\push_back.hpp"
        $File "pub\mpl\vector\aux_\push_front.hpp"
        $File "pub\mpl\vector\aux_\size.hpp"
        $File "pub\mpl\vector\aux_\tag.hpp"
        $File "pub\mpl\vector\aux_\vector0.hpp"
    }
    
    $Folder "pub\preprocessor\control\detail\edg"
    {
        $File "pub\preprocessor\control\detail\edg\while.hpp"
    }
    
    $Folder "pub\preprocessor\control\detail"
    {
        $File "pub\preprocessor\control\detail\while.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\no_ctps"
    {
        $File "pub\mpl\aux_\preprocessed\no_ctps\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\and.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\list.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\or.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ctps\vector.hpp"
    }
    
    $Folder "pub\test\included"
    {
        $File "pub\test\included\prg_exec_monitor.hpp"
        $File "pub\test\included\test_exec_monitor.hpp"
        $File "pub\test\included\unit_test_framework.hpp"
    }
    
    $Folder "pub\preprocessor\tuple"
    {
        $File "pub\preprocessor\tuple\eat.hpp"
        $File "pub\preprocessor\tuple\elem.hpp"
        $File "pub\preprocessor\tuple\rem.hpp"
        $File "pub\preprocessor\tuple\reverse.hpp"
        $File "pub\preprocessor\tuple\to_list.hpp"
        $File "pub\preprocessor\tuple\to_seq.hpp"
    }
    
    $Folder "pub\preprocessor\repetition\detail"
    {
        $File "pub\preprocessor\repetition\detail\for.hpp"
    }
    
    $Folder "pub\python"
    {
        $File "pub\python\arg_from_python.hpp"
        $File "pub\python\args_fwd.hpp"
        $File "pub\python\args.hpp"
        $File "pub\python\back_reference.hpp"
        $File "pub\python\base_type_traits.hpp"
        $File "pub\python\bases.hpp"
        $File "pub\python\borrowed.hpp"
        $File "pub\python\call_method.hpp"
        $File "pub\python\call.hpp"
        $File "pub\python\cast.hpp"
        $File "pub\python\class_fwd.hpp"
        $File "pub\python\class.hpp"
        $File "pub\python\copy_const_reference.hpp"
        $File "pub\python\copy_non_const_reference.hpp"
        $File "pub\python\data_members.hpp"
        $File "pub\python\def.hpp"
        $File "pub\python\default_call_policies.hpp"
        $File "pub\python\dict.hpp"
        $File "pub\python\enum.hpp"
        $File "pub\python\errors.hpp"
        $File "pub\python\exception_translator.hpp"
        $File "pub\python\extract.hpp"
        $File "pub\python\handle_fwd.hpp"
        $File "pub\python\handle.hpp"
        $File "pub\python\has_back_reference.hpp"
        $File "pub\python\implicit.hpp"
        $File "pub\python\init.hpp"
        $File "pub\python\instance_holder.hpp"
        $File "pub\python\iterator.hpp"
        $File "pub\python\list.hpp"
        $File "pub\python\long.hpp"
        $File "pub\python\lvalue_from_pytype.hpp"
        $File "pub\python\make_function.hpp"
        $File "pub\python\manage_new_object.hpp"
        $File "pub\python\module_init.hpp"
        $File "pub\python\module.hpp"
        $File "pub\python\numeric.hpp"
        $File "pub\python\object_attributes.hpp"
        $File "pub\python\object_call.hpp"
        $File "pub\python\object_core.hpp"
        $File "pub\python\object_fwd.hpp"
        $File "pub\python\object_items.hpp"
        $File "pub\python\object_operators.hpp"
        $File "pub\python\object_protocol_core.hpp"
        $File "pub\python\object_protocol.hpp"
        $File "pub\python\object_slices.hpp"
        $File "pub\python\object.hpp"
        $File "pub\python\opaque_pointer_converter.hpp"
        $File "pub\python\operators.hpp"
        $File "pub\python\other.hpp"
        $File "pub\python\overloads.hpp"
        $File "pub\python\pointee.hpp"
        $File "pub\python\proxy.hpp"
        $File "pub\python\ptr.hpp"
        $File "pub\python\raw_function.hpp"
        $File "pub\python\refcount.hpp"
        $File "pub\python\reference_existing_object.hpp"
        $File "pub\python\return_by_value.hpp"
        $File "pub\python\return_internal_reference.hpp"
        $File "pub\python\return_opaque_pointer.hpp"
        $File "pub\python\return_value_policy.hpp"
        $File "pub\python\scope.hpp"
        $File "pub\python\self.hpp"
        $File "pub\python\signature.hpp"
        $File "pub\python\slice_nil.hpp"
        $File "pub\python\str.hpp"
        $File "pub\python\tag.hpp"
        $File "pub\python\to_python_converter.hpp"
        $File "pub\python\to_python_indirect.hpp"
        $File "pub\python\to_python_value.hpp"
        $File "pub\python\tuple.hpp"
        $File "pub\python\type_id.hpp"
        $File "pub\python\with_custodian_and_ward.hpp"
    }
    
    $Folder "pub\preprocessor\slot"
    {
        $File "pub\preprocessor\slot\slot.hpp"
    }
    
    $Folder "pub\preprocessor\repetition"
    {
        $File "pub\preprocessor\repetition\deduce_r.hpp"
        $File "pub\preprocessor\repetition\deduce_z.hpp"
        $File "pub\preprocessor\repetition\enum_binary_params.hpp"
        $File "pub\preprocessor\repetition\enum_params_with_a_default.hpp"
        $File "pub\preprocessor\repetition\enum_params_with_defaults.hpp"
        $File "pub\preprocessor\repetition\enum_params.hpp"
        $File "pub\preprocessor\repetition\enum_shifted_params.hpp"
        $File "pub\preprocessor\repetition\enum_shifted.hpp"
        $File "pub\preprocessor\repetition\enum_trailing_binary_params.hpp"
        $File "pub\preprocessor\repetition\enum_trailing_params.hpp"
        $File "pub\preprocessor\repetition\enum_trailing.hpp"
        $File "pub\preprocessor\repetition\enum.hpp"
        $File "pub\preprocessor\repetition\for.hpp"
        $File "pub\preprocessor\repetition\repeat_from_to.hpp"
        $File "pub\preprocessor\repetition\repeat.hpp"
    }
    
    $Folder "pub\tuple"
    {
        $File "pub\tuple\tuple_comparison.hpp"
        $File "pub\tuple\tuple_io.hpp"
        $File "pub\tuple\tuple.hpp"
    }
    
    $Folder "pub\preprocessor\array"
    {
        $File "pub\preprocessor\array\data.hpp"
        $File "pub\preprocessor\array\elem.hpp"
        $File "pub\preprocessor\array\insert.hpp"
        $File "pub\preprocessor\array\pop_back.hpp"
        $File "pub\preprocessor\array\pop_front.hpp"
        $File "pub\preprocessor\array\push_back.hpp"
        $File "pub\preprocessor\array\push_front.hpp"
        $File "pub\preprocessor\array\remove.hpp"
        $File "pub\preprocessor\array\replace.hpp"
        $File "pub\preprocessor\array\reverse.hpp"
        $File "pub\preprocessor\array\size.hpp"
    }
    
    $Folder "pub\preprocessor\arithmetic\detail"
    {
        $File "pub\preprocessor\arithmetic\detail\div_base.hpp"
    }
    
    $Folder "pub\spirit"
    {
        $File "pub\spirit\attribute.hpp"
        $File "pub\spirit\core.hpp"
        $File "pub\spirit\debug.hpp"
        $File "pub\spirit\dynamic.hpp"
        $File "pub\spirit\error_handling.hpp"
        $File "pub\spirit\iterator.hpp"
        $File "pub\spirit\symbols.hpp"
        $File "pub\spirit\utility.hpp"
    }
    
    $Folder "pub\spirit\core\composite"
    {
        $File "pub\spirit\core\composite\actions.hpp"
        $File "pub\spirit\core\composite\composite.hpp"
        $File "pub\spirit\core\composite\directives.hpp"
        $File "pub\spirit\core\composite\epsilon.hpp"
        $File "pub\spirit\core\composite\operators.hpp"
    }
    
    $Folder "pub\numeric\interval\compare"
    {
        $File "pub\numeric\interval\compare\explicit.hpp"
        $File "pub\numeric\interval\compare\lexicographic.hpp"
        $File "pub\numeric\interval\compare\set.hpp"
        $File "pub\numeric\interval\compare\tribool.hpp"
    }
    
    $Folder "pub\math"
    {
        $File "pub\math\common_factor_ct.hpp"
        $File "pub\math\common_factor_rt.hpp"
        $File "pub\math\common_factor.hpp"
        $File "pub\math\octonion.hpp"
        $File "pub\math\quaternion.hpp"
    }
    
    $Folder "pub\mpl\math"
    {
        $File "pub\mpl\math\fixed_c.hpp"
        $File "pub\mpl\math\is_even.hpp"
        $File "pub\mpl\math\rational_c.hpp"
    }
    
    $Folder "pub\preprocessor\detail"
    {
        $File "pub\preprocessor\detail\auto_rec.hpp"
        $File "pub\preprocessor\detail\check.hpp"
        $File "pub\preprocessor\detail\is_binary.hpp"
        $File "pub\preprocessor\detail\is_nullary.hpp"
        $File "pub\preprocessor\detail\is_unary.hpp"
        $File "pub\preprocessor\detail\null.hpp"
        $File "pub\preprocessor\detail\split.hpp"
    }
    
    $Folder "pub\type_traits\detail"
    {
        $File "pub\type_traits\detail\bool_trait_def.hpp"
        $File "pub\type_traits\detail\bool_trait_undef.hpp"
        $File "pub\type_traits\detail\cv_traits_impl.hpp"
        $File "pub\type_traits\detail\false_result.hpp"
        $File "pub\type_traits\detail\ice_and.hpp"
        $File "pub\type_traits\detail\ice_eq.hpp"
        $File "pub\type_traits\detail\ice_not.hpp"
        $File "pub\type_traits\detail\ice_or.hpp"
        $File "pub\type_traits\detail\is_function_ptr_helper.hpp"
        $File "pub\type_traits\detail\is_function_ptr_tester.hpp"
        $File "pub\type_traits\detail\is_function_type_tester.hpp"
        $File "pub\type_traits\detail\is_mem_fun_pointer_impl.hpp"
        $File "pub\type_traits\detail\is_mem_fun_pointer_tester.hpp"
        $File "pub\type_traits\detail\size_t_trait_def.hpp"
        $File "pub\type_traits\detail\size_t_trait_undef.hpp"
        $File "pub\type_traits\detail\template_arity_spec.hpp"
        $File "pub\type_traits\detail\type_trait_def.hpp"
        $File "pub\type_traits\detail\type_trait_undef.hpp"
        $File "pub\type_traits\detail\wrap.hpp"
        $File "pub\type_traits\detail\yes_no_type.hpp"
    }
    
    $Folder "pub\lambda\detail"
    {
        $File "pub\lambda\detail\actions.hpp"
        $File "pub\lambda\detail\arity_code.hpp"
        $File "pub\lambda\detail\bind_functions.hpp"
        $File "pub\lambda\detail\control_constructs_common.hpp"
        $File "pub\lambda\detail\control_structures_impl.hpp"
        $File "pub\lambda\detail\function_adaptors.hpp"
        $File "pub\lambda\detail\is_instance_of.hpp"
        $File "pub\lambda\detail\lambda_config.hpp"
        $File "pub\lambda\detail\lambda_functor_base.hpp"
        $File "pub\lambda\detail\lambda_functors.hpp"
        $File "pub\lambda\detail\lambda_fwd.hpp"
        $File "pub\lambda\detail\lambda_traits.hpp"
        $File "pub\lambda\detail\member_ptr.hpp"
        $File "pub\lambda\detail\operator_actions.hpp"
        $File "pub\lambda\detail\operator_lambda_func_base.hpp"
        $File "pub\lambda\detail\operator_return_type_traits.hpp"
        $File "pub\lambda\detail\operators.hpp"
        $File "pub\lambda\detail\ret.hpp"
        $File "pub\lambda\detail\return_type_traits.hpp"
        $File "pub\lambda\detail\select_functions.hpp"
    }
    
    $Folder "pub\io"
    {
        $File "pub\io\ios_state.hpp"
    }
    
    $Folder "pub\preprocessor\control"
    {
        $File "pub\preprocessor\control\deduce_d.hpp"
        $File "pub\preprocessor\control\expr_if.hpp"
        $File "pub\preprocessor\control\expr_iif.hpp"
        $File "pub\preprocessor\control\if.hpp"
        $File "pub\preprocessor\control\iif.hpp"
        $File "pub\preprocessor\control\while.hpp"
    }
    
    $Folder "pub\date_time\gregorian"
    {
        $File "pub\date_time\gregorian\formatters.hpp"
        $File "pub\date_time\gregorian\greg_calendar.hpp"
        $File "pub\date_time\gregorian\greg_date.hpp"
        $File "pub\date_time\gregorian\greg_day_of_year.hpp"
        $File "pub\date_time\gregorian\greg_day.hpp"
        $File "pub\date_time\gregorian\greg_duration.hpp"
        $File "pub\date_time\gregorian\greg_facet.hpp"
        $File "pub\date_time\gregorian\greg_month.hpp"
        $File "pub\date_time\gregorian\greg_weekday.hpp"
        $File "pub\date_time\gregorian\greg_year.hpp"
        $File "pub\date_time\gregorian\greg_ymd.hpp"
        $File "pub\date_time\gregorian\gregorian_types.hpp"
        $File "pub\date_time\gregorian\gregorian.hpp"
        $File "pub\date_time\gregorian\parsers.hpp"
    }
    
    $Folder "pub\preprocessor\iteration\detail"
    {
        $File "pub\preprocessor\iteration\detail\finish.hpp"
        $File "pub\preprocessor\iteration\detail\local.hpp"
        $File "pub\preprocessor\iteration\detail\rlocal.hpp"
        $File "pub\preprocessor\iteration\detail\self.hpp"
        $File "pub\preprocessor\iteration\detail\start.hpp"
    }
    
    $Folder "pub\date_time\posix_time"
    {
        $File "pub\date_time\posix_time\posix_time_config.hpp"
        $File "pub\date_time\posix_time\posix_time_duration.hpp"
        $File "pub\date_time\posix_time\posix_time_system.hpp"
        $File "pub\date_time\posix_time\posix_time_types.hpp"
        $File "pub\date_time\posix_time\posix_time.hpp"
        $File "pub\date_time\posix_time\ptime.hpp"
        $File "pub\date_time\posix_time\time_formatters.hpp"
        $File "pub\date_time\posix_time\time_parsers.hpp"
        $File "pub\date_time\posix_time\time_period.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\mwcw"
    {
        $File "pub\mpl\aux_\preprocessed\mwcw\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\and.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\list.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\or.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\mwcw\vector.hpp"
    }
    
    $Folder "pub\lambda"
    {
        $File "pub\lambda\algorithm.hpp"
        $File "pub\lambda\bind.hpp"
        $File "pub\lambda\casts.hpp"
        $File "pub\lambda\closures.hpp"
        $File "pub\lambda\construct.hpp"
        $File "pub\lambda\control_structures.hpp"
        $File "pub\lambda\core.hpp"
        $File "pub\lambda\exceptions.hpp"
        $File "pub\lambda\if.hpp"
        $File "pub\lambda\lambda.hpp"
        $File "pub\lambda\loops.hpp"
        $File "pub\lambda\numeric.hpp"
        $File "pub\lambda\switch.hpp"
    }
    
    $Folder "pub\preprocessor\iteration"
    {
        $File "pub\preprocessor\iteration\iterate.hpp"
        $File "pub\preprocessor\iteration\local.hpp"
        $File "pub\preprocessor\iteration\self.hpp"
    }
    
    $Folder "pub\spirit\core\non_terminal"
    {
        $File "pub\spirit\core\non_terminal\grammar.hpp"
        $File "pub\spirit\core\non_terminal\parser_context.hpp"
        $File "pub\spirit\core\non_terminal\parser_id.hpp"
        $File "pub\spirit\core\non_terminal\rule.hpp"
        $File "pub\spirit\core\non_terminal\subrule.hpp"
    }
    
    $Folder "pub\mpl\vector"
    {
        $File "pub\mpl\vector\vector0_c.hpp"
        $File "pub\mpl\vector\vector0.hpp"
        $File "pub\mpl\vector\vector10_c.hpp"
        $File "pub\mpl\vector\vector10.hpp"
        $File "pub\mpl\vector\vector20_c.hpp"
        $File "pub\mpl\vector\vector20.hpp"
        $File "pub\mpl\vector\vector30_c.hpp"
        $File "pub\mpl\vector\vector30.hpp"
        $File "pub\mpl\vector\vector40_c.hpp"
        $File "pub\mpl\vector\vector40.hpp"
        $File "pub\mpl\vector\vector50_c.hpp"
        $File "pub\mpl\vector\vector50.hpp"
    }
    
    $Folder "pub\preprocessor\facilities"
    {
        $File "pub\preprocessor\facilities\apply.hpp"
        $File "pub\preprocessor\facilities\empty.hpp"
        $File "pub\preprocessor\facilities\expand.hpp"
        $File "pub\preprocessor\facilities\identity.hpp"
        $File "pub\preprocessor\facilities\intercept.hpp"
        $File "pub\preprocessor\facilities\is_1.hpp"
        $File "pub\preprocessor\facilities\is_empty_or_1.hpp"
        $File "pub\preprocessor\facilities\is_empty.hpp"
    }
    
    $Folder "pub\thread\detail"
    {
        $File "pub\thread\detail\config.hpp"
        $File "pub\thread\detail\force_cast.hpp"
        $File "pub\thread\detail\lock.hpp"
        $File "pub\thread\detail\singleton.hpp"
        $File "pub\thread\detail\threadmon.hpp"
    }
    
    $Folder "pub\regex\v3"
    {
        $File "pub\regex\v3\cregex.hpp"
        $File "pub\regex\v3\fileiter.hpp"
        $File "pub\regex\v3\instances.hpp"
        $File "pub\regex\v3\regex_compile.hpp"
        $File "pub\regex\v3\regex_cstring.hpp"
        $File "pub\regex\v3\regex_format.hpp"
        $File "pub\regex\v3\regex_fwd.hpp"
        $File "pub\regex\v3\regex_kmp.hpp"
        $File "pub\regex\v3\regex_library_include.hpp"
        $File "pub\regex\v3\regex_match.hpp"
        $File "pub\regex\v3\regex_raw_buffer.hpp"
        $File "pub\regex\v3\regex_split.hpp"
        $File "pub\regex\v3\regex_stack.hpp"
        $File "pub\regex\v3\regex_synch.hpp"
        $File "pub\regex\v3\regex_traits.hpp"
        $File "pub\regex\v3\regex.hpp"
    }
    
    $Folder "pub\preprocessor\control\detail\msvc"
    {
        $File "pub\preprocessor\control\detail\msvc\while.hpp"
    }
    
    $Folder "pub\spirit\attribute"
    {
        $File "pub\spirit\attribute\closure_context.hpp"
        $File "pub\spirit\attribute\closure.hpp"
        $File "pub\spirit\attribute\parametric.hpp"
    }
    
    $Folder "pub\spirit\core"
    {
        $File "pub\spirit\core\assert.hpp"
        $File "pub\spirit\core\basics.hpp"
        $File "pub\spirit\core\match.hpp"
        $File "pub\spirit\core\parser.hpp"
    }
    
    $Folder "pub\format"
    {
        $File "pub\format\exceptions.hpp"
        $File "pub\format\feed_args.hpp"
        $File "pub\format\format_class.hpp"
        $File "pub\format\format_fwd.hpp"
        $File "pub\format\format_implementation.hpp"
        $File "pub\format\free_funcs.hpp"
        $File "pub\format\group.hpp"
        $File "pub\format\internals_fwd.hpp"
        $File "pub\format\internals.hpp"
        $File "pub\format\macros_default.hpp"
        $File "pub\format\macros_stlport.hpp"
        $File "pub\format\msvc_disambiguater.hpp"
        $File "pub\format\parsing.hpp"
    }
    
    $Folder "pub\signals"
    {
        $File "pub\signals\connection.hpp"
        $File "pub\signals\signal_template.hpp"
        $File "pub\signals\signal0.hpp"
        $File "pub\signals\signal1.hpp"
        $File "pub\signals\signal10.hpp"
        $File "pub\signals\signal2.hpp"
        $File "pub\signals\signal3.hpp"
        $File "pub\signals\signal4.hpp"
        $File "pub\signals\signal5.hpp"
        $File "pub\signals\signal6.hpp"
        $File "pub\signals\signal7.hpp"
        $File "pub\signals\signal8.hpp"
        $File "pub\signals\signal9.hpp"
        $File "pub\signals\slot.hpp"
        $File "pub\signals\trackable.hpp"
    }
    
    $Folder "pub\preprocessor\arithmetic"
    {
        $File "pub\preprocessor\arithmetic\add.hpp"
        $File "pub\preprocessor\arithmetic\dec.hpp"
        $File "pub\preprocessor\arithmetic\div.hpp"
        $File "pub\preprocessor\arithmetic\inc.hpp"
        $File "pub\preprocessor\arithmetic\mod.hpp"
        $File "pub\preprocessor\arithmetic\mul.hpp"
        $File "pub\preprocessor\arithmetic\sub.hpp"
    }
    
    $Folder "pub\pool\detail"
    {
        $File "pub\pool\detail\ct_gcd_lcm.hpp"
        $File "pub\pool\detail\gcd_lcm.hpp"
        $File "pub\pool\detail\guard.hpp"
        $File "pub\pool\detail\mutex.hpp"
        $File "pub\pool\detail\pool_construct_simple.inc"
        $File "pub\pool\detail\pool_construct.inc"
        $File "pub\pool\detail\singleton.hpp"
    }
    
    $Folder "pub\numeric\interval\ext"
    {
        $File "pub\numeric\interval\ext\x86_fast_rounding_control.hpp"
    }
    
    $Folder "pub\multi_array"
    {
        $File "pub\multi_array\algorithm.hpp"
        $File "pub\multi_array\base.hpp"
        $File "pub\multi_array\collection_concept.hpp"
        $File "pub\multi_array\concept_checks.hpp"
        $File "pub\multi_array\copy_array.hpp"
        $File "pub\multi_array\extent_gen.hpp"
        $File "pub\multi_array\extent_range.hpp"
        $File "pub\multi_array\index_gen.hpp"
        $File "pub\multi_array\index_range.hpp"
        $File "pub\multi_array\iterator_adaptors.hpp"
        $File "pub\multi_array\iterator.hpp"
        $File "pub\multi_array\multi_array_ref.hpp"
        $File "pub\multi_array\range_list.hpp"
        $File "pub\multi_array\storage_order.hpp"
        $File "pub\multi_array\subarray.hpp"
        $File "pub\multi_array\types.hpp"
        $File "pub\multi_array\view.hpp"
    }
    
    $Folder "pub\preprocessor\selection"
    {
        $File "pub\preprocessor\selection\max.hpp"
        $File "pub\preprocessor\selection\min.hpp"
    }
    
    $Folder "pub\test"
    {
        $File "pub\test\auto_unit_test.hpp"
        $File "pub\test\execution_monitor.hpp"
        $File "pub\test\floating_point_comparison.hpp"
        $File "pub\test\minimal.hpp"
        $File "pub\test\test_tools.hpp"
        $File "pub\test\unit_test_log.hpp"
        $File "pub\test\unit_test_result.hpp"
        $File "pub\test\unit_test_suite_ex.hpp"
        $File "pub\test\unit_test_suite.hpp"
        $File "pub\test\unit_test.hpp"
    }
    
    $Folder "pub\spirit\core\primitives"
    {
        $File "pub\spirit\core\primitives\numerics.hpp"
        $File "pub\spirit\core\primitives\primitives.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\bcc551"
    {
        $File "pub\mpl\aux_\preprocessed\bcc551\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\and.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\list.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\or.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc551\vector.hpp"
    }
    
    $Folder "pub\random"
    {
        $File "pub\random\additive_combine.hpp"
        $File "pub\random\bernoulli_distribution.hpp"
        $File "pub\random\binomial_distribution.hpp"
        $File "pub\random\cauchy_distribution.hpp"
        $File "pub\random\discard_block.hpp"
        $File "pub\random\exponential_distribution.hpp"
        $File "pub\random\gamma_distribution.hpp"
        $File "pub\random\geometric_distribution.hpp"
        $File "pub\random\inversive_congruential.hpp"
        $File "pub\random\lagged_fibonacci.hpp"
        $File "pub\random\linear_congruential.hpp"
        $File "pub\random\linear_feedback_shift.hpp"
        $File "pub\random\lognormal_distribution.hpp"
        $File "pub\random\mersenne_twister.hpp"
        $File "pub\random\normal_distribution.hpp"
        $File "pub\random\poisson_distribution.hpp"
        $File "pub\random\random_number_generator.hpp"
        $File "pub\random\ranlux.hpp"
        $File "pub\random\shuffle_output.hpp"
        $File "pub\random\subtract_with_carry.hpp"
        $File "pub\random\triangle_distribution.hpp"
        $File "pub\random\uniform_01.hpp"
        $File "pub\random\uniform_int.hpp"
        $File "pub\random\uniform_on_sphere.hpp"
        $File "pub\random\uniform_real.hpp"
        $File "pub\random\uniform_smallint.hpp"
        $File "pub\random\xor_combine.hpp"
    }
    
    $Folder "pub\mpl\vector\aux_\preprocessed\typeof_based"
    {
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector10_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector10.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector20_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector20.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector30_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector30.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector40_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector40.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector50_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\typeof_based\vector50.hpp"
    }
    
    $Folder "pub\config\compiler"
    {
        $File "pub\config\compiler\borland.hpp"
        $File "pub\config\compiler\comeau.hpp"
        $File "pub\config\compiler\common_edg.hpp"
        $File "pub\config\compiler\compaq_cxx.hpp"
        $File "pub\config\compiler\gcc.hpp"
        $File "pub\config\compiler\greenhills.hpp"
        $File "pub\config\compiler\hp_acc.hpp"
        $File "pub\config\compiler\intel.hpp"
        $File "pub\config\compiler\kai.hpp"
        $File "pub\config\compiler\metrowerks.hpp"
        $File "pub\config\compiler\mpw.hpp"
        $File "pub\config\compiler\sgi_mipspro.hpp"
        $File "pub\config\compiler\sunpro_cc.hpp"
        $File "pub\config\compiler\vacpp.hpp"
        $File "pub\config\compiler\visualc.hpp"
    }
    
    $Folder "pub\utility"
    {
        $File "pub\utility\addressof.hpp"
        $File "pub\utility\base_from_member.hpp"
        $File "pub\utility\value_init.hpp"
    }
    
    $Folder "pub\mpl\list\aux_\preprocessed\plain"
    {
        $File "pub\mpl\list\aux_\preprocessed\plain\list10_c.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list10.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list20_c.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list20.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list30_c.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list30.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list40_c.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list40.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list50_c.hpp"
        $File "pub\mpl\list\aux_\preprocessed\plain\list50.hpp"
    }
    
    $Folder "pub\integer"
    {
        $File "pub\integer\integer_mask.hpp"
        $File "pub\integer\static_log2.hpp"
        $File "pub\integer\static_min_max.hpp"
    }
    
    $Folder "pub\preprocessor\iteration\detail\iter"
    {
        $File "pub\preprocessor\iteration\detail\iter\forward1.hpp"
        $File "pub\preprocessor\iteration\detail\iter\forward2.hpp"
        $File "pub\preprocessor\iteration\detail\iter\forward3.hpp"
        $File "pub\preprocessor\iteration\detail\iter\forward4.hpp"
        $File "pub\preprocessor\iteration\detail\iter\forward5.hpp"
        $File "pub\preprocessor\iteration\detail\iter\reverse1.hpp"
        $File "pub\preprocessor\iteration\detail\iter\reverse2.hpp"
        $File "pub\preprocessor\iteration\detail\iter\reverse3.hpp"
        $File "pub\preprocessor\iteration\detail\iter\reverse4.hpp"
        $File "pub\preprocessor\iteration\detail\iter\reverse5.hpp"
    }
    
    $Folder "pub\spirit\core\impl"
    {
        $File "pub\spirit\core\impl\borland.hpp"
        $File "pub\spirit\core\impl\msvc.hpp"
    }
    
    $Folder "pub\preprocessor"
    {
        $File "pub\preprocessor\arithmetic.hpp"
        $File "pub\preprocessor\array.hpp"
        $File "pub\preprocessor\assert_msg.hpp"
        $File "pub\preprocessor\cat.hpp"
        $File "pub\preprocessor\comma_if.hpp"
        $File "pub\preprocessor\comma.hpp"
        $File "pub\preprocessor\comparison.hpp"
        $File "pub\preprocessor\control.hpp"
        $File "pub\preprocessor\debug.hpp"
        $File "pub\preprocessor\dec.hpp"
        $File "pub\preprocessor\empty.hpp"
        $File "pub\preprocessor\enum_params_with_a_default.hpp"
        $File "pub\preprocessor\enum_params_with_defaults.hpp"
        $File "pub\preprocessor\enum_params.hpp"
        $File "pub\preprocessor\enum_shifted_params.hpp"
        $File "pub\preprocessor\enum_shifted.hpp"
        $File "pub\preprocessor\enum.hpp"
        $File "pub\preprocessor\expand.hpp"
        $File "pub\preprocessor\expr_if.hpp"
        $File "pub\preprocessor\facilities.hpp"
        $File "pub\preprocessor\for.hpp"
        $File "pub\preprocessor\identity.hpp"
        $File "pub\preprocessor\if.hpp"
        $File "pub\preprocessor\inc.hpp"
        $File "pub\preprocessor\iterate.hpp"
        $File "pub\preprocessor\iteration.hpp"
        $File "pub\preprocessor\library.hpp"
        $File "pub\preprocessor\limits.hpp"
        $File "pub\preprocessor\list.hpp"
        $File "pub\preprocessor\logical.hpp"
        $File "pub\preprocessor\max.hpp"
        $File "pub\preprocessor\min.hpp"
        $File "pub\preprocessor\punctuation.hpp"
        $File "pub\preprocessor\repeat_2nd.hpp"
        $File "pub\preprocessor\repeat_3rd.hpp"
        $File "pub\preprocessor\repeat_from_to_2nd.hpp"
        $File "pub\preprocessor\repeat_from_to_3rd.hpp"
        $File "pub\preprocessor\repeat_from_to.hpp"
        $File "pub\preprocessor\repeat.hpp"
        $File "pub\preprocessor\repetition.hpp"
        $File "pub\preprocessor\selection.hpp"
        $File "pub\preprocessor\seq.hpp"
        $File "pub\preprocessor\slot.hpp"
        $File "pub\preprocessor\stringize.hpp"
        $File "pub\preprocessor\tuple.hpp"
        $File "pub\preprocessor\while.hpp"
        $File "pub\preprocessor\wstringize.hpp"
    }
    
    $Folder "pub\mpl"
    {
        $File "pub\mpl\advance.hpp"
        $File "pub\mpl\alias.hpp"
        $File "pub\mpl\always.hpp"
        $File "pub\mpl\and.hpp"
        $File "pub\mpl\apply_if.hpp"
        $File "pub\mpl\apply.hpp"
        $File "pub\mpl\arg_fwd.hpp"
        $File "pub\mpl\arg.hpp"
        $File "pub\mpl\arithmetic.hpp"
        $File "pub\mpl\as_sequence.hpp"
        $File "pub\mpl\assert_is_same.hpp"
        $File "pub\mpl\at_fwd.hpp"
        $File "pub\mpl\at.hpp"
        $File "pub\mpl\back_fwd.hpp"
        $File "pub\mpl\back.hpp"
        $File "pub\mpl\base.hpp"
        $File "pub\mpl\begin_end_fwd.hpp"
        $File "pub\mpl\begin_end.hpp"
        $File "pub\mpl\bind.hpp"
        $File "pub\mpl\bitand.hpp"
        $File "pub\mpl\bitor.hpp"
        $File "pub\mpl\bitwise.hpp"
        $File "pub\mpl\bitxor.hpp"
        $File "pub\mpl\bool_fwd.hpp"
        $File "pub\mpl\bool.hpp"
        $File "pub\mpl\clear_fwd.hpp"
        $File "pub\mpl\clear.hpp"
        $File "pub\mpl\comparison.hpp"
        $File "pub\mpl\contains.hpp"
        $File "pub\mpl\copy_backward_if.hpp"
        $File "pub\mpl\copy_backward.hpp"
        $File "pub\mpl\copy_if.hpp"
        $File "pub\mpl\copy.hpp"
        $File "pub\mpl\count_if.hpp"
        $File "pub\mpl\count.hpp"
        $File "pub\mpl\deref.hpp"
        $File "pub\mpl\distance.hpp"
        $File "pub\mpl\divides.hpp"
        $File "pub\mpl\empty_base.hpp"
        $File "pub\mpl\empty_fwd.hpp"
        $File "pub\mpl\empty.hpp"
        $File "pub\mpl\equal_to.hpp"
        $File "pub\mpl\equal.hpp"
        $File "pub\mpl\erase_fwd.hpp"
        $File "pub\mpl\erase.hpp"
        $File "pub\mpl\filter_view.hpp"
        $File "pub\mpl\find_if.hpp"
        $File "pub\mpl\find.hpp"
        $File "pub\mpl\fold_backward.hpp"
        $File "pub\mpl\fold.hpp"
        $File "pub\mpl\for_each.hpp"
        $File "pub\mpl\front_fwd.hpp"
        $File "pub\mpl\front.hpp"
        $File "pub\mpl\greater_equal.hpp"
        $File "pub\mpl\greater.hpp"
        $File "pub\mpl\identity.hpp"
        $File "pub\mpl\if.hpp"
        $File "pub\mpl\inherit_linearly.hpp"
        $File "pub\mpl\inherit.hpp"
        $File "pub\mpl\insert_fwd.hpp"
        $File "pub\mpl\insert_range_fwd.hpp"
        $File "pub\mpl\insert_range.hpp"
        $File "pub\mpl\insert.hpp"
        $File "pub\mpl\int_fwd.hpp"
        $File "pub\mpl\int.hpp"
        $File "pub\mpl\integral_c_fwd.hpp"
        $File "pub\mpl\integral_c.hpp"
        $File "pub\mpl\is_placeholder.hpp"
        $File "pub\mpl\is_sequence.hpp"
        $File "pub\mpl\iter_fold_backward.hpp"
        $File "pub\mpl\iter_fold.hpp"
        $File "pub\mpl\iterator_category.hpp"
        $File "pub\mpl\iterator_range.hpp"
        $File "pub\mpl\iterator_tag.hpp"
        $File "pub\mpl\joint_view.hpp"
        $File "pub\mpl\lambda_fwd.hpp"
        $File "pub\mpl\lambda_helper.hpp"
        $File "pub\mpl\lambda.hpp"
        $File "pub\mpl\less_equal.hpp"
        $File "pub\mpl\less.hpp"
        $File "pub\mpl\list_c.hpp"
        $File "pub\mpl\list.hpp"
        $File "pub\mpl\logical.hpp"
        $File "pub\mpl\long_fwd.hpp"
        $File "pub\mpl\long.hpp"
        $File "pub\mpl\lower_bound.hpp"
        $File "pub\mpl\max_element.hpp"
        $File "pub\mpl\minus.hpp"
        $File "pub\mpl\modulus.hpp"
        $File "pub\mpl\multiplies.hpp"
        $File "pub\mpl\negate.hpp"
        $File "pub\mpl\next.hpp"
        $File "pub\mpl\not_equal_to.hpp"
        $File "pub\mpl\not.hpp"
        $File "pub\mpl\O1_size_fwd.hpp"
        $File "pub\mpl\O1_size.hpp"
        $File "pub\mpl\or.hpp"
        $File "pub\mpl\pair.hpp"
        $File "pub\mpl\placeholders.hpp"
        $File "pub\mpl\plus.hpp"
        $File "pub\mpl\pop_back_fwd.hpp"
        $File "pub\mpl\pop_back.hpp"
        $File "pub\mpl\pop_front_fwd.hpp"
        $File "pub\mpl\pop_front.hpp"
        $File "pub\mpl\prior.hpp"
        $File "pub\mpl\project1st.hpp"
        $File "pub\mpl\project2nd.hpp"
        $File "pub\mpl\protect.hpp"
        $File "pub\mpl\push_back_fwd.hpp"
        $File "pub\mpl\push_back.hpp"
        $File "pub\mpl\push_front_fwd.hpp"
        $File "pub\mpl\push_front.hpp"
        $File "pub\mpl\quote.hpp"
        $File "pub\mpl\range_c.hpp"
        $File "pub\mpl\remove_if.hpp"
        $File "pub\mpl\remove.hpp"
        $File "pub\mpl\replace_if.hpp"
        $File "pub\mpl\replace.hpp"
        $File "pub\mpl\reverse.hpp"
        $File "pub\mpl\same_as.hpp"
        $File "pub\mpl\select1st.hpp"
        $File "pub\mpl\select2nd.hpp"
        $File "pub\mpl\sequence_tag_fwd.hpp"
        $File "pub\mpl\sequence_tag.hpp"
        $File "pub\mpl\shift_left.hpp"
        $File "pub\mpl\shift_right.hpp"
        $File "pub\mpl\single_view.hpp"
        $File "pub\mpl\size_fwd.hpp"
        $File "pub\mpl\size_t_fwd.hpp"
        $File "pub\mpl\size_t.hpp"
        $File "pub\mpl\size.hpp"
        $File "pub\mpl\sizeof.hpp"
        $File "pub\mpl\switch.hpp"
        $File "pub\mpl\transform_view.hpp"
        $File "pub\mpl\transform.hpp"
        $File "pub\mpl\unique.hpp"
        $File "pub\mpl\upper_bound.hpp"
        $File "pub\mpl\vector_c.hpp"
        $File "pub\mpl\vector.hpp"
        $File "pub\mpl\void.hpp"
        $File "pub\mpl\zip_view.hpp"
    }
    
    $Folder "pub\preprocessor\list"
    {
        $File "pub\preprocessor\list\adt.hpp"
        $File "pub\preprocessor\list\append.hpp"
        $File "pub\preprocessor\list\at.hpp"
        $File "pub\preprocessor\list\cat.hpp"
        $File "pub\preprocessor\list\enum.hpp"
        $File "pub\preprocessor\list\filter.hpp"
        $File "pub\preprocessor\list\first_n.hpp"
        $File "pub\preprocessor\list\fold_left.hpp"
        $File "pub\preprocessor\list\fold_right.hpp"
        $File "pub\preprocessor\list\for_each_i.hpp"
        $File "pub\preprocessor\list\for_each_product.hpp"
        $File "pub\preprocessor\list\for_each.hpp"
        $File "pub\preprocessor\list\rest_n.hpp"
        $File "pub\preprocessor\list\reverse.hpp"
        $File "pub\preprocessor\list\size.hpp"
        $File "pub\preprocessor\list\to_tuple.hpp"
        $File "pub\preprocessor\list\transform.hpp"
    }
    
    $Folder "pub\numeric"
    {
        $File "pub\numeric\interval.hpp"
    }
    
    $Folder "pub\spirit\symbols"
    {
        $File "pub\spirit\symbols\symbols.hpp"
    }
    
    $Folder "pub\signals\detail"
    {
        $File "pub\signals\detail\signal_base.hpp"
        $File "pub\signals\detail\signals_common.hpp"
        $File "pub\signals\detail\slot_call_iterator.hpp"
    }
    
    $Folder "pub\mpl\list"
    {
        $File "pub\mpl\list\list0_c.hpp"
        $File "pub\mpl\list\list0.hpp"
        $File "pub\mpl\list\list10_c.hpp"
        $File "pub\mpl\list\list10.hpp"
        $File "pub\mpl\list\list20_c.hpp"
        $File "pub\mpl\list\list20.hpp"
        $File "pub\mpl\list\list30_c.hpp"
        $File "pub\mpl\list\list30.hpp"
        $File "pub\mpl\list\list40_c.hpp"
        $File "pub\mpl\list\list40.hpp"
        $File "pub\mpl\list\list50_c.hpp"
        $File "pub\mpl\list\list50.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessor"
    {
        $File "pub\mpl\aux_\preprocessor\add.hpp"
        $File "pub\mpl\aux_\preprocessor\def_params_tail.hpp"
        $File "pub\mpl\aux_\preprocessor\default_params.hpp"
        $File "pub\mpl\aux_\preprocessor\enum.hpp"
        $File "pub\mpl\aux_\preprocessor\ext_params.hpp"
        $File "pub\mpl\aux_\preprocessor\filter_params.hpp"
        $File "pub\mpl\aux_\preprocessor\params.hpp"
        $File "pub\mpl\aux_\preprocessor\partial_spec_params.hpp"
        $File "pub\mpl\aux_\preprocessor\range.hpp"
        $File "pub\mpl\aux_\preprocessor\repeat.hpp"
        $File "pub\mpl\aux_\preprocessor\sub.hpp"
        $File "pub\mpl\aux_\preprocessor\tuple.hpp"
    }
    
    $Folder "pub\spirit\core\scanner"
    {
        $File "pub\spirit\core\scanner\scanner.hpp"
        $File "pub\spirit\core\scanner\skipper.hpp"
    }
    
    $Folder "pub\python\detail"
    {
        $File "pub\python\detail\aix_init_module.hpp"
        $File "pub\python\detail\api_placeholder.hpp"
        $File "pub\python\detail\borrowed_ptr.hpp"
        $File "pub\python\detail\caller.hpp"
        $File "pub\python\detail\char_array.hpp"
        $File "pub\python\detail\config.hpp"
        $File "pub\python\detail\construct.hpp"
        $File "pub\python\detail\convertible.hpp"
        $File "pub\python\detail\copy_ctor_mutates_rhs.hpp"
        $File "pub\python\detail\cv_category.hpp"
        $File "pub\python\detail\dealloc.hpp"
        $File "pub\python\detail\decorated_type_id.hpp"
        $File "pub\python\detail\decref_guard.hpp"
        $File "pub\python\detail\def_helper.hpp"
        $File "pub\python\detail\defaults_def.hpp"
        $File "pub\python\detail\defaults_gen.hpp"
        $File "pub\python\detail\dependent.hpp"
        $File "pub\python\detail\destroy.hpp"
        $File "pub\python\detail\exception_handler.hpp"
        $File "pub\python\detail\force_instantiate.hpp"
        $File "pub\python\detail\if_else.hpp"
        $File "pub\python\detail\indirect_traits.hpp"
        $File "pub\python\detail\invoke.hpp"
        $File "pub\python\detail\is_auto_ptr.hpp"
        $File "pub\python\detail\is_function_ref_tester.hpp"
        $File "pub\python\detail\is_xxx.hpp"
        $File "pub\python\detail\make_keyword_range_fn.hpp"
        $File "pub\python\detail\make_tuple.hpp"
        $File "pub\python\detail\map_entry.hpp"
        $File "pub\python\detail\member_function_cast.hpp"
        $File "pub\python\detail\mpl_lambda.hpp"
        $File "pub\python\detail\msvc_typeinfo.hpp"
        $File "pub\python\detail\none.hpp"
        $File "pub\python\detail\not_specified.hpp"
        $File "pub\python\detail\operator_id.hpp"
        $File "pub\python\detail\overloads_fwd.hpp"
        $File "pub\python\detail\pointee.hpp"
        $File "pub\python\detail\preprocessor.hpp"
        $File "pub\python\detail\python22_fixed.h"
        $File "pub\python\detail\raw_pyobject.hpp"
        $File "pub\python\detail\referent_storage.hpp"
        $File "pub\python\detail\result.hpp"
        $File "pub\python\detail\scope.hpp"
        $File "pub\python\detail\string_literal.hpp"
        $File "pub\python\detail\target.hpp"
        $File "pub\python\detail\translate_exception.hpp"
        $File "pub\python\detail\type_list_impl_no_pts.hpp"
        $File "pub\python\detail\type_list_impl.hpp"
        $File "pub\python\detail\type_list.hpp"
        $File "pub\python\detail\unwind_type.hpp"
        $File "pub\python\detail\value_is_shared_ptr.hpp"
        $File "pub\python\detail\value_is_xxx.hpp"
        $File "pub\python\detail\void_ptr.hpp"
        $File "pub\python\detail\void_return.hpp"
        $File "pub\python\detail\wrap_python.hpp"
    }
    
    $Folder "pub\function\detail"
    {
        $File "pub\function\detail\function_iterate.hpp"
        $File "pub\function\detail\maybe_include.hpp"
        $File "pub\function\detail\prologue.hpp"
    }
    
    $Folder "pub\random\detail"
    {
        $File "pub\random\detail\const_mod.hpp"
        $File "pub\random\detail\iterator_mixin.hpp"
        $File "pub\random\detail\signed_unsigned_compare.hpp"
    }
    
    $Folder "pub\preprocessor\logical"
    {
        $File "pub\preprocessor\logical\and.hpp"
        $File "pub\preprocessor\logical\bitand.hpp"
        $File "pub\preprocessor\logical\bitnor.hpp"
        $File "pub\preprocessor\logical\bitor.hpp"
        $File "pub\preprocessor\logical\bitxor.hpp"
        $File "pub\preprocessor\logical\bool.hpp"
        $File "pub\preprocessor\logical\compl.hpp"
        $File "pub\preprocessor\logical\nor.hpp"
        $File "pub\preprocessor\logical\not.hpp"
        $File "pub\preprocessor\logical\or.hpp"
        $File "pub\preprocessor\logical\xor.hpp"
    }
    
    $Folder "pub\preprocessor\list\detail\edg"
    {
        $File "pub\preprocessor\list\detail\edg\fold_left.hpp"
        $File "pub\preprocessor\list\detail\edg\fold_right.hpp"
    }
    
    $Folder "pub\pending\detail"
    {
        $File "pub\pending\detail\disjoint_sets.hpp"
        $File "pub\pending\detail\int_iterator.hpp"
        $File "pub\pending\detail\property.hpp"
    }
    
    $Folder "pub\thread"
    {
        $File "pub\thread\condition.hpp"
        $File "pub\thread\exceptions.hpp"
        $File "pub\thread\mutex.hpp"
        $File "pub\thread\once.hpp"
        $File "pub\thread\recursive_mutex.hpp"
        $File "pub\thread\thread.hpp"
        $File "pub\thread\tss.hpp"
        $File "pub\thread\xtime.hpp"
    }
    
    $Folder "pub\mpl\vector\aux_\preprocessed\plain"
    {
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector10_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector10.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector20_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector20.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector30_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector30.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector40_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector40.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector50_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\plain\vector50.hpp"
    }
    
    $Folder "pub\filesystem"
    {
        $File "pub\filesystem\convenience.hpp"
        $File "pub\filesystem\exception.hpp"
        $File "pub\filesystem\fstream.hpp"
        $File "pub\filesystem\operations.hpp"
        $File "pub\filesystem\path.hpp"
    }
    
    $Folder "pub\preprocessor\repetition\detail\msvc"
    {
        $File "pub\preprocessor\repetition\detail\msvc\for.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\no_ttp"
    {
        $File "pub\mpl\aux_\preprocessed\no_ttp\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\and.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\list.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\or.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\no_ttp\vector.hpp"
    }
    
    $Folder "pub\spirit\core\meta"
    {
        $File "pub\spirit\core\meta\fundamental.hpp"
        $File "pub\spirit\core\meta\parser_traits.hpp"
        $File "pub\spirit\core\meta\traverse.hpp"
    }
    
    $Folder "pub\spirit\debug"
    {
        $File "pub\spirit\debug\debug_node.hpp"
        $File "pub\spirit\debug\minimal.hpp"
        $File "pub\spirit\debug\parser_names.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\msvc60"
    {
        $File "pub\mpl\aux_\preprocessed\msvc60\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\and.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\list.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\or.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc60\vector.hpp"
    }
    
    $Folder "pub\python\converter"
    {
        $File "pub\python\converter\arg_from_python.hpp"
        $File "pub\python\converter\arg_to_python_base.hpp"
        $File "pub\python\converter\arg_to_python.hpp"
        $File "pub\python\converter\as_to_python_function.hpp"
        $File "pub\python\converter\builtin_converters.hpp"
        $File "pub\python\converter\constructor_function.hpp"
        $File "pub\python\converter\convertible_function.hpp"
        $File "pub\python\converter\from_python.hpp"
        $File "pub\python\converter\implicit.hpp"
        $File "pub\python\converter\obj_mgr_arg_from_python.hpp"
        $File "pub\python\converter\object_manager.hpp"
        $File "pub\python\converter\pointer_type_id.hpp"
        $File "pub\python\converter\pyobject_traits.hpp"
        $File "pub\python\converter\pyobject_type.hpp"
        $File "pub\python\converter\pytype_arg_from_python.hpp"
        $File "pub\python\converter\pytype_object_mgr_traits.hpp"
        $File "pub\python\converter\registered_pointee.hpp"
        $File "pub\python\converter\registered.hpp"
        $File "pub\python\converter\registrations.hpp"
        $File "pub\python\converter\registry.hpp"
        $File "pub\python\converter\return_from_python.hpp"
        $File "pub\python\converter\rvalue_from_python_data.hpp"
        $File "pub\python\converter\shared_ptr_deleter.hpp"
        $File "pub\python\converter\shared_ptr_from_python.hpp"
        $File "pub\python\converter\shared_ptr_to_python.hpp"
        $File "pub\python\converter\to_python_function_type.hpp"
    }
    
    $Folder "pub\bind"
    {
        $File "pub\bind\apply.hpp"
        $File "pub\bind\arg.hpp"
        $File "pub\bind\bind_cc.hpp"
        $File "pub\bind\bind_mf_cc.hpp"
        $File "pub\bind\bind_template.hpp"
        $File "pub\bind\make_adaptable.hpp"
        $File "pub\bind\mem_fn_cc.hpp"
        $File "pub\bind\mem_fn_template.hpp"
        $File "pub\bind\mem_fn_vw.hpp"
        $File "pub\bind\placeholders.hpp"
        $File "pub\bind\protect.hpp"
    }
    
    $Folder "pub\mpl\vector\aux_\preprocessed\no_ctps"
    {
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector10_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector10.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector20_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector20.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector30_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector30.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector40_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector40.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector50_c.hpp"
        $File "pub\mpl\vector\aux_\preprocessed\no_ctps\vector50.hpp"
    }
    
    $Folder "pub\date_time"
    {
        $File "pub\date_time\adjust_functors.hpp"
        $File "pub\date_time\c_local_time_adjustor.hpp"
        $File "pub\date_time\c_time.hpp"
        $File "pub\date_time\compiler_config.hpp"
        $File "pub\date_time\constrained_value.hpp"
        $File "pub\date_time\date_clock_device.hpp"
        $File "pub\date_time\date_defs.hpp"
        $File "pub\date_time\date_duration.hpp"
        $File "pub\date_time\date_format_simple.hpp"
        $File "pub\date_time\date_formatting_locales.hpp"
        $File "pub\date_time\date_formatting.hpp"
        $File "pub\date_time\date_generators.hpp"
        $File "pub\date_time\date_iterator.hpp"
        $File "pub\date_time\date_names_put.hpp"
        $File "pub\date_time\date_parsing.hpp"
        $File "pub\date_time\date.hpp"
        $File "pub\date_time\dst_rules.hpp"
        $File "pub\date_time\gregorian_calendar.hpp"
        $File "pub\date_time\int_adapter.hpp"
        $File "pub\date_time\iso_format.hpp"
        $File "pub\date_time\local_time_adjustor.hpp"
        $File "pub\date_time\local_timezone_defs.hpp"
        $File "pub\date_time\locale_config.hpp"
        $File "pub\date_time\microsec_time_clock.hpp"
        $File "pub\date_time\parse_format_base.hpp"
        $File "pub\date_time\period.hpp"
        $File "pub\date_time\special_defs.hpp"
        $File "pub\date_time\testfrmwk.hpp"
        $File "pub\date_time\time_clock.hpp"
        $File "pub\date_time\time_defs.hpp"
        $File "pub\date_time\time_duration.hpp"
        $File "pub\date_time\time_formatting_streams.hpp"
        $File "pub\date_time\time_iterator.hpp"
        $File "pub\date_time\time_parsing.hpp"
        $File "pub\date_time\time_resolution_traits.hpp"
        $File "pub\date_time\time_system_counted.hpp"
        $File "pub\date_time\time_system_split.hpp"
        $File "pub\date_time\time.hpp"
        $File "pub\date_time\wrapping_int.hpp"
        $File "pub\date_time\year_month_day.hpp"
    }
    
    $Folder "pub\regex"
    {
        $File "pub\regex\config.hpp"
        $File "pub\regex\pattern_except.hpp"
        $File "pub\regex\regex_traits.hpp"
        $File "pub\regex\src.cpp"
        $File "pub\regex\user.hpp"
    }
    
    $Folder "pub\detail"
    {
        $File "pub\detail\algorithm.hpp"
        $File "pub\detail\allocator.hpp"
        $File "pub\detail\atomic_count_gcc.hpp"
        $File "pub\detail\atomic_count_linux.hpp"
        $File "pub\detail\atomic_count_pthreads.hpp"
        $File "pub\detail\atomic_count_win32.hpp"
        $File "pub\detail\atomic_count.hpp"
        $File "pub\detail\binary_search.hpp"
        $File "pub\detail\call_traits.hpp"
        $File "pub\detail\catch_exceptions.hpp"
        $File "pub\detail\compressed_pair.hpp"
        $File "pub\detail\dynamic_bitset.hpp"
        $File "pub\detail\iterator.hpp"
        $File "pub\detail\lightweight_mutex.hpp"
        $File "pub\detail\lightweight_test.hpp"
        $File "pub\detail\limits.hpp"
        $File "pub\detail\lwm_gcc.hpp"
        $File "pub\detail\lwm_irix.hpp"
        $File "pub\detail\lwm_linux.hpp"
        $File "pub\detail\lwm_nop.hpp"
        $File "pub\detail\lwm_pthreads.hpp"
        $File "pub\detail\lwm_win32_cs.hpp"
        $File "pub\detail\lwm_win32.hpp"
        $File "pub\detail\named_template_params.hpp"
        $File "pub\detail\numeric_traits.hpp"
        $File "pub\detail\ob_call_traits.hpp"
        $File "pub\detail\ob_compressed_pair.hpp"
        $File "pub\detail\quick_allocator.hpp"
        $File "pub\detail\select_type.hpp"
        $File "pub\detail\shared_array_nmt.hpp"
        $File "pub\detail\shared_count.hpp"
        $File "pub\detail\shared_ptr_nmt.hpp"
        $File "pub\detail\workaround.hpp"
    }
    
    $Folder "pub\preprocessor\list\detail"
    {
        $File "pub\preprocessor\list\detail\fold_left.hpp"
        $File "pub\preprocessor\list\detail\fold_right.hpp"
    }
    
    $Folder "pub\type_traits"
    {
        $File "pub\type_traits\add_const.hpp"
        $File "pub\type_traits\add_cv.hpp"
        $File "pub\type_traits\add_pointer.hpp"
        $File "pub\type_traits\add_reference.hpp"
        $File "pub\type_traits\add_volatile.hpp"
        $File "pub\type_traits\alignment_of.hpp"
        $File "pub\type_traits\alignment_traits.hpp"
        $File "pub\type_traits\arithmetic_traits.hpp"
        $File "pub\type_traits\array_traits.hpp"
        $File "pub\type_traits\broken_compiler_spec.hpp"
        $File "pub\type_traits\composite_traits.hpp"
        $File "pub\type_traits\config.hpp"
        $File "pub\type_traits\conversion_traits.hpp"
        $File "pub\type_traits\cv_traits.hpp"
        $File "pub\type_traits\function_traits.hpp"
        $File "pub\type_traits\has_nothrow_assign.hpp"
        $File "pub\type_traits\has_nothrow_constructor.hpp"
        $File "pub\type_traits\has_nothrow_copy.hpp"
        $File "pub\type_traits\has_nothrow_destructor.hpp"
        $File "pub\type_traits\has_trivial_assign.hpp"
        $File "pub\type_traits\has_trivial_constructor.hpp"
        $File "pub\type_traits\has_trivial_copy.hpp"
        $File "pub\type_traits\has_trivial_destructor.hpp"
        $File "pub\type_traits\ice.hpp"
        $File "pub\type_traits\intrinsics.hpp"
        $File "pub\type_traits\is_arithmetic.hpp"
        $File "pub\type_traits\is_array.hpp"
        $File "pub\type_traits\is_base_and_derived.hpp"
        $File "pub\type_traits\is_class.hpp"
        $File "pub\type_traits\is_compound.hpp"
        $File "pub\type_traits\is_const.hpp"
        $File "pub\type_traits\is_convertible.hpp"
        $File "pub\type_traits\is_empty.hpp"
        $File "pub\type_traits\is_enum.hpp"
        $File "pub\type_traits\is_float.hpp"
        $File "pub\type_traits\is_function.hpp"
        $File "pub\type_traits\is_fundamental.hpp"
        $File "pub\type_traits\is_integral.hpp"
        $File "pub\type_traits\is_member_function_pointer.hpp"
        $File "pub\type_traits\is_member_pointer.hpp"
        $File "pub\type_traits\is_object.hpp"
        $File "pub\type_traits\is_pod.hpp"
        $File "pub\type_traits\is_pointer.hpp"
        $File "pub\type_traits\is_polymorphic.hpp"
        $File "pub\type_traits\is_reference.hpp"
        $File "pub\type_traits\is_same.hpp"
        $File "pub\type_traits\is_scalar.hpp"
        $File "pub\type_traits\is_stateless.hpp"
        $File "pub\type_traits\is_union.hpp"
        $File "pub\type_traits\is_void.hpp"
        $File "pub\type_traits\is_volatile.hpp"
        $File "pub\type_traits\object_traits.hpp"
        $File "pub\type_traits\reference_traits.hpp"
        $File "pub\type_traits\remove_bounds.hpp"
        $File "pub\type_traits\remove_const.hpp"
        $File "pub\type_traits\remove_cv.hpp"
        $File "pub\type_traits\remove_pointer.hpp"
        $File "pub\type_traits\remove_reference.hpp"
        $File "pub\type_traits\remove_volatile.hpp"
        $File "pub\type_traits\same_traits.hpp"
        $File "pub\type_traits\transform_traits_spec.hpp"
        $File "pub\type_traits\transform_traits.hpp"
        $File "pub\type_traits\type_traits_test.hpp"
        $File "pub\type_traits\type_with_alignment.hpp"
    }
    
    $Folder "pub\pool"
    {
        $File "pub\pool\object_pool.hpp"
        $File "pub\pool\pool_alloc.hpp"
        $File "pub\pool\pool.hpp"
        $File "pub\pool\poolfwd.hpp"
        $File "pub\pool\simple_segregated_storage.hpp"
        $File "pub\pool\singleton_pool.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\gcc"
    {
        $File "pub\mpl\aux_\preprocessed\gcc\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\and.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\list.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\or.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\gcc\vector.hpp"
    }
    
    $Folder "pub\spirit\error_handling"
    {
        $File "pub\spirit\error_handling\exceptions.hpp"
    }
    
    $Folder "pub\preprocessor\punctuation"
    {
        $File "pub\preprocessor\punctuation\comma_if.hpp"
        $File "pub\preprocessor\punctuation\comma.hpp"
        $File "pub\preprocessor\punctuation\paren_if.hpp"
        $File "pub\preprocessor\punctuation\paren.hpp"
    }
    
    $Folder "pub\config\stdlib"
    {
        $File "pub\config\stdlib\dinkumware.hpp"
        $File "pub\config\stdlib\libcomo.hpp"
        $File "pub\config\stdlib\libstdcpp3.hpp"
        $File "pub\config\stdlib\modena.hpp"
        $File "pub\config\stdlib\msl.hpp"
        $File "pub\config\stdlib\roguewave.hpp"
        $File "pub\config\stdlib\sgi.hpp"
        $File "pub\config\stdlib\stlport.hpp"
        $File "pub\config\stdlib\vacpp.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\msvc70"
    {
        $File "pub\mpl\aux_\preprocessed\msvc70\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\and.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\list.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\or.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\msvc70\vector.hpp"
    }
    
    $Folder "pub\mpl\aux_\preprocessed\bcc"
    {
        $File "pub\mpl\aux_\preprocessed\bcc\advance_backward.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\advance_forward.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\and.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\apply.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\arg.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\basic_bind.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\bind.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\full_lambda.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\lambda_helper.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\list_c.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\list.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\or.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\placeholders.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\quote.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\template_arity.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\vector_c.hpp"
        $File "pub\mpl\aux_\preprocessed\bcc\vector.hpp"
    }
    
    $Folder "pub\tuple\detail"
    {
        $File "pub\tuple\detail\tuple_basic_no_partial_spec.hpp"
        $File "pub\tuple\detail\tuple_basic.hpp"
    }
    
    $Folder "pub\preprocessor\config"
    {
        $File "pub\preprocessor\config\config.hpp"
        $File "pub\preprocessor\config\limits.hpp"
    }
    
    $Folder "pub\preprocessor\debug"
    {
        $File "pub\preprocessor\debug\assert.hpp"
        $File "pub\preprocessor\debug\error.hpp"
        $File "pub\preprocessor\debug\line.hpp"
    }
    
    $Folder "pub\mpl\aux_"
    {
        $File "pub\mpl\aux_\advance_backward.hpp"
        $File "pub\mpl\aux_\advance_forward.hpp"
        $File "pub\mpl\aux_\algorithm_namespace.hpp"
        $File "pub\mpl\aux_\apply_1st.hpp"
        $File "pub\mpl\aux_\apply.hpp"
        $File "pub\mpl\aux_\arg_typedef.hpp"
        $File "pub\mpl\aux_\arity_spec.hpp"
        $File "pub\mpl\aux_\arity.hpp"
        $File "pub\mpl\aux_\at_impl.hpp"
        $File "pub\mpl\aux_\back_impl.hpp"
        $File "pub\mpl\aux_\begin_end_impl.hpp"
        $File "pub\mpl\aux_\bool_value_wknd.hpp"
        $File "pub\mpl\aux_\clear_impl.hpp"
        $File "pub\mpl\aux_\common_name_wknd.hpp"
        $File "pub\mpl\aux_\copy_if_op.hpp"
        $File "pub\mpl\aux_\copy_op.hpp"
        $File "pub\mpl\aux_\count_args.hpp"
        $File "pub\mpl\aux_\debug_print.hpp"
        $File "pub\mpl\aux_\deref_wknd.hpp"
        $File "pub\mpl\aux_\empty_impl.hpp"
        $File "pub\mpl\aux_\erase_impl.hpp"
        $File "pub\mpl\aux_\filter_iter.hpp"
        $File "pub\mpl\aux_\fold_backward_impl_body.hpp"
        $File "pub\mpl\aux_\fold_backward_impl.hpp"
        $File "pub\mpl\aux_\fold_impl_body.hpp"
        $File "pub\mpl\aux_\fold_impl.hpp"
        $File "pub\mpl\aux_\fold_op.hpp"
        $File "pub\mpl\aux_\fold_pred.hpp"
        $File "pub\mpl\aux_\front_impl.hpp"
        $File "pub\mpl\aux_\full_lambda.hpp"
        $File "pub\mpl\aux_\has_begin.hpp"
        $File "pub\mpl\aux_\has_rebind.hpp"
        $File "pub\mpl\aux_\has_size.hpp"
        $File "pub\mpl\aux_\has_tag.hpp"
        $File "pub\mpl\aux_\has_type.hpp"
        $File "pub\mpl\aux_\has_xxx.hpp"
        $File "pub\mpl\aux_\ice_cast.hpp"
        $File "pub\mpl\aux_\include_preprocessed.hpp"
        $File "pub\mpl\aux_\insert_impl.hpp"
        $File "pub\mpl\aux_\insert_range_impl.hpp"
        $File "pub\mpl\aux_\integral_wrapper.hpp"
        $File "pub\mpl\aux_\is_msvc_eti_arg.hpp"
        $File "pub\mpl\aux_\iter_apply.hpp"
        $File "pub\mpl\aux_\iter_distance.hpp"
        $File "pub\mpl\aux_\iter_fold_backward_impl.hpp"
        $File "pub\mpl\aux_\iter_fold_if_impl.hpp"
        $File "pub\mpl\aux_\iter_fold_impl.hpp"
        $File "pub\mpl\aux_\iter_push_front.hpp"
        $File "pub\mpl\aux_\iterator_category.hpp"
        $File "pub\mpl\aux_\iterator_names.hpp"
        $File "pub\mpl\aux_\joint_iter.hpp"
        $File "pub\mpl\aux_\lambda_arity_param.hpp"
        $File "pub\mpl\aux_\lambda_expr.hpp"
        $File "pub\mpl\aux_\lambda_no_ctps.hpp"
        $File "pub\mpl\aux_\lambda_spec.hpp"
        $File "pub\mpl\aux_\lambda_support.hpp"
        $File "pub\mpl\aux_\logical_op.hpp"
        $File "pub\mpl\aux_\metafunction.hpp"
        $File "pub\mpl\aux_\msvc_dtw.hpp"
        $File "pub\mpl\aux_\msvc_eti_base.hpp"
        $File "pub\mpl\aux_\msvc_never_true.hpp"
        $File "pub\mpl\aux_\nested_type_wknd.hpp"
        $File "pub\mpl\aux_\next.hpp"
        $File "pub\mpl\aux_\O1_size_impl.hpp"
        $File "pub\mpl\aux_\pop_back_impl.hpp"
        $File "pub\mpl\aux_\pop_front_impl.hpp"
        $File "pub\mpl\aux_\pred.hpp"
        $File "pub\mpl\aux_\prior.hpp"
        $File "pub\mpl\aux_\push_back_impl.hpp"
        $File "pub\mpl\aux_\push_front_impl.hpp"
        $File "pub\mpl\aux_\sequence_tag.hpp"
        $File "pub\mpl\aux_\single_element_iter.hpp"
        $File "pub\mpl\aux_\size_impl.hpp"
        $File "pub\mpl\aux_\template_arity_fwd.hpp"
        $File "pub\mpl\aux_\template_arity.hpp"
        $File "pub\mpl\aux_\traits_lambda_spec.hpp"
        $File "pub\mpl\aux_\transform_iter.hpp"
        $File "pub\mpl\aux_\type_wrapper.hpp"
        $File "pub\mpl\aux_\typeof.hpp"
        $File "pub\mpl\aux_\unwrap.hpp"
        $File "pub\mpl\aux_\value_wknd.hpp"
        $File "pub\mpl\aux_\void_spec.hpp"
        $File "pub\mpl\aux_\yes_no.hpp"
    }
    
    $Folder "pub\preprocessor\slot\detail"
    {
        $File "pub\preprocessor\slot\detail\def.hpp"
        $File "pub\preprocessor\slot\detail\shared.hpp"
        $File "pub\preprocessor\slot\detail\slot1.hpp"
        $File "pub\preprocessor\slot\detail\slot2.hpp"
        $File "pub\preprocessor\slot\detail\slot3.hpp"
        $File "pub\preprocessor\slot\detail\slot4.hpp"
        $File "pub\preprocessor\slot\detail\slot5.hpp"
    }
    
    $Folder "pub\mpl\limits"
    {
        $File "pub\mpl\limits\arity.hpp"
        $File "pub\mpl\limits\list.hpp"
        $File "pub\mpl\limits\unrolling.hpp"
        $File "pub\mpl\limits\vector.hpp"
    }
    
    $Folder "pub\spirit\utility\impl\chset"
    {
        $File "pub\spirit\utility\impl\chset\basic_chset.hpp"
        $File "pub\spirit\utility\impl\chset\range_run.hpp"
    }
    
    $Folder "pub\preprocessor\iteration\detail\bounds"
    {
        $File "pub\preprocessor\iteration\detail\bounds\lower1.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\lower2.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\lower3.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\lower4.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\lower5.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\upper1.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\upper2.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\upper3.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\upper4.hpp"
        $File "pub\preprocessor\iteration\detail\bounds\upper5.hpp"
    }
    
    $Folder "pub\function"
    {
        $File "pub\function\function_base.hpp"
        $File "pub\function\function_template.hpp"
        $File "pub\function\function0.hpp"
        $File "pub\function\function1.hpp"
        $File "pub\function\function10.hpp"
        $File "pub\function\function2.hpp"
        $File "pub\function\function3.hpp"
        $File "pub\function\function4.hpp"
        $File "pub\function\function5.hpp"
        $File "pub\function\function6.hpp"
        $File "pub\function\function7.hpp"
        $File "pub\function\function8.hpp"
        $File "pub\function\function9.hpp"
    }
    
    $Folder "pub\config"
    {
        $File "pub\config\posix_features.hpp"
        $File "pub\config\select_compiler_config.hpp"
        $File "pub\config\select_platform_config.hpp"
        $File "pub\config\select_stdlib_config.hpp"
        $File "pub\config\suffix.hpp"
        $File "pub\config\user.hpp"
    }
    
    $Folder "pub\config\platform"
    {
        $File "pub\config\platform\aix.hpp"
        $File "pub\config\platform\amigaos.hpp"
        $File "pub\config\platform\beos.hpp"
        $File "pub\config\platform\bsd.hpp"
        $File "pub\config\platform\cygwin.hpp"
        $File "pub\config\platform\hpux.hpp"
        $File "pub\config\platform\irix.hpp"
        $File "pub\config\platform\linux.hpp"
        $File "pub\config\platform\macos.hpp"
        $File "pub\config\platform\solaris.hpp"
        $File "pub\config\platform\win32.hpp"
    }
    
    $Folder "pub\mpl\aux_\range_c"
    {
        $File "pub\mpl\aux_\range_c\back.hpp"
        $File "pub\mpl\aux_\range_c\begin_end.hpp"
        $File "pub\mpl\aux_\range_c\empty.hpp"
        $File "pub\mpl\aux_\range_c\front.hpp"
        $File "pub\mpl\aux_\range_c\iterator.hpp"
        $File "pub\mpl\aux_\range_c\O1_size.hpp"
        $File "pub\mpl\aux_\range_c\size.hpp"
        $File "pub\mpl\aux_\range_c\tag.hpp"
    }
    
    $Folder "pub\graph"
    {
        $File "pub\graph\adjacency_iterator.hpp"
        $File "pub\graph\adjacency_list_io.hpp"
        $File "pub\graph\adjacency_list.hpp"
        $File "pub\graph\adjacency_matrix.hpp"
        $File "pub\graph\bandwidth.hpp"
        $File "pub\graph\bellman_ford_shortest_paths.hpp"
        $File "pub\graph\biconnected_components.hpp"
        $File "pub\graph\breadth_first_search.hpp"
        $File "pub\graph\connected_components.hpp"
        $File "pub\graph\copy.hpp"
        $File "pub\graph\create_condensation_graph.hpp"
        $File "pub\graph\cuthill_mckee_ordering.hpp"
        $File "pub\graph\dag_shortest_paths.hpp"
        $File "pub\graph\depth_first_search.hpp"
        $File "pub\graph\dijkstra_shortest_paths.hpp"
        $File "pub\graph\edge_connectivity.hpp"
        $File "pub\graph\edge_list.hpp"
        $File "pub\graph\edmunds_karp_max_flow.hpp"
        $File "pub\graph\exception.hpp"
        $File "pub\graph\filtered_graph.hpp"
        $File "pub\graph\graph_archetypes.hpp"
        $File "pub\graph\graph_as_tree.hpp"
        $File "pub\graph\graph_concepts.hpp"
        $File "pub\graph\graph_selectors.hpp"
        $File "pub\graph\graph_test.hpp"
        $File "pub\graph\graph_traits.hpp"
        $File "pub\graph\graph_utility.hpp"
        $File "pub\graph\graphviz.hpp"
        $File "pub\graph\incremental_components.hpp"
        $File "pub\graph\isomorphism.hpp"
        $File "pub\graph\iteration_macros_undef.hpp"
        $File "pub\graph\iteration_macros.hpp"
        $File "pub\graph\johnson_all_pairs_shortest.hpp"
        $File "pub\graph\kruskal_min_spanning_tree.hpp"
        $File "pub\graph\leda_graph.hpp"
        $File "pub\graph\matrix_as_graph.hpp"
        $File "pub\graph\minimum_degree_ordering.hpp"
        $File "pub\graph\named_function_params.hpp"
        $File "pub\graph\neighbor_bfs.hpp"
        $File "pub\graph\prim_minimum_spanning_tree.hpp"
        $File "pub\graph\profile.hpp"
        $File "pub\graph\properties.hpp"
        $File "pub\graph\property_iter_range.hpp"
        $File "pub\graph\push_relabel_max_flow.hpp"
        $File "pub\graph\random.hpp"
        $File "pub\graph\read_dimacs.hpp"
        $File "pub\graph\relax.hpp"
        $File "pub\graph\reverse_graph.hpp"
        $File "pub\graph\sequential_vertex_coloring.hpp"
        $File "pub\graph\sloan_ordering.hpp"
        $File "pub\graph\smallest_last_ordering.hpp"
        $File "pub\graph\stanford_graph.hpp"
        $File "pub\graph\strong_components.hpp"
        $File "pub\graph\subgraph.hpp"
        $File "pub\graph\topological_sort.hpp"
        $File "pub\graph\transitive_closure.hpp"
        $File "pub\graph\transpose_graph.hpp"
        $File "pub\graph\tree_traits.hpp"
        $File "pub\graph\undirected_dfs.hpp"
        $File "pub\graph\vector_as_graph.hpp"
        $File "pub\graph\visitors.hpp"
        $File "pub\graph\wavefront.hpp"
    }
    
    $Folder "pub\pending"
    {
        $File "pub\pending\bucket_sorter.hpp"
        $File "pub\pending\container_traits.hpp"
        $File "pub\pending\cstddef.hpp"
        $File "pub\pending\ct_if.hpp"
        $File "pub\pending\disjoint_sets.hpp"
        $File "pub\pending\fenced_priority_queue.hpp"
        $File "pub\pending\fibonacci_heap.hpp"
        $File "pub\pending\indirect_cmp.hpp"
        $File "pub\pending\integer_range.hpp"
        $File "pub\pending\is_heap.hpp"
        $File "pub\pending\iterator_adaptors.hpp"
        $File "pub\pending\iterator_tests.hpp"
        $File "pub\pending\mutable_heap.hpp"
        $File "pub\pending\mutable_queue.hpp"
        $File "pub\pending\property.hpp"
        $File "pub\pending\queue.hpp"
        $File "pub\pending\stringtok.hpp"
    }
    
    $Folder "pub\graph\detail"
    {
        $File "pub\graph\detail\adj_list_edge_iterator.hpp"
        $File "pub\graph\detail\adjacency_list.hpp"
        $File "pub\graph\detail\array_binary_tree.hpp"
        $File "pub\graph\detail\bitset_adaptor.hpp"
        $File "pub\graph\detail\bitset.hpp"
        $File "pub\graph\detail\connected_components.hpp"
        $File "pub\graph\detail\edge.hpp"
        $File "pub\graph\detail\incidence_iterator.hpp"
        $File "pub\graph\detail\incremental_components.hpp"
        $File "pub\graph\detail\intset.hpp"
        $File "pub\graph\detail\is_same.hpp"
        $File "pub\graph\detail\list_base.hpp"
        $File "pub\graph\detail\permutation.hpp"
        $File "pub\graph\detail\self_avoiding_walk.hpp"
        $File "pub\graph\detail\set_adaptor.hpp"
        $File "pub\graph\detail\shadow_iterator.hpp"
    }
    
    $Folder "pub\mpl\aux_\config"
    {
        $File "pub\mpl\aux_\config\bind.hpp"
        $File "pub\mpl\aux_\config\compiler.hpp"
        $File "pub\mpl\aux_\config\ctps.hpp"
        $File "pub\mpl\aux_\config\dependent_nttp.hpp"
        $File "pub\mpl\aux_\config\dtp.hpp"
        $File "pub\mpl\aux_\config\eti.hpp"
        $File "pub\mpl\aux_\config\internals.hpp"
        $File "pub\mpl\aux_\config\lambda.hpp"
        $File "pub\mpl\aux_\config\msvc_typename.hpp"
        $File "pub\mpl\aux_\config\msvc.hpp"
        $File "pub\mpl\aux_\config\nttp.hpp"
        $File "pub\mpl\aux_\config\overload_resolution.hpp"
        $File "pub\mpl\aux_\config\preprocessor.hpp"
        $File "pub\mpl\aux_\config\static_constant.hpp"
        $File "pub\mpl\aux_\config\ttp.hpp"
        $File "pub\mpl\aux_\config\use_preprocessed.hpp"
        $File "pub\mpl\aux_\config\vector.hpp"
        $File "pub\mpl\aux_\config\workaround.hpp"
    }
    
    $Folder "pub\preprocessor\repetition\detail\edg"
    {
        $File "pub\preprocessor\repetition\detail\edg\for.hpp"
    }
    
    $Folder "pub\preprocessor\comparison"
    {
        $File "pub\preprocessor\comparison\equal.hpp"
        $File "pub\preprocessor\comparison\greater_equal.hpp"
        $File "pub\preprocessor\comparison\greater.hpp"
        $File "pub\preprocessor\comparison\less_equal.hpp"
        $File "pub\preprocessor\comparison\less.hpp"
        $File "pub\preprocessor\comparison\not_equal.hpp"
    }
    
    $Folder "pub\spirit\iterator"
    {
        $File "pub\spirit\iterator\file_iterator.hpp"
        $File "pub\spirit\iterator\fixed_size_queue.hpp"
        $File "pub\spirit\iterator\multi_pass.hpp"
        $File "pub\spirit\iterator\position_iterator.hpp"
    }
